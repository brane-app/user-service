name: Test

on:
  - push
  - pull_request
  - repository_dispatch

jobs:
  info:
    runs-on: ubuntu-latest
    steps:
      - name: Ref
        run: echo ${{ github.ref }}
      - name: Head ref
        run: echo ${{ github.head_ref }}
      - name: Go version
        run: go version
      - name: Dockerhub username exists
        run: echo ${{ secrets.DOCKERHUB_USERNAME }} | wc -c
      - name: Dockerhub token exists
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | wc -c

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Get dependencies
        run: GOPROXY=direct go get -u ./...
      - name: Build package
        run: GOPROXY=direct go build -o job-build-out .

  test:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Set up testing database
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: brane
          mysql root password: foobar2000
      - name: Check out code
        uses: actions/checkout@v2
      - name: Get dependencies
        run: GOPROXY=direct go get -u ./...
      - name: Run tests
        env:
          DATABASE_CONNECTION: "root:foobar2000@tcp(localhost)/brane"
          NO_FERROTHORN: "true"
        run: GOPROXY=direct go test ./... -count 1 -cover -coverprofile /tmp/coverage -coverpkg ./...
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          files: /tmp/coverage
          fail_ci_if_error: true

  docker:
    if: github.ref == 'refs/heads/master' && github.head_ref == ''
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up buildx
        uses: docker/setup-buildx-action@v1
      - name: Dockerhub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: gastrodon/brane-${{ github.event.repository.name }}:latest
